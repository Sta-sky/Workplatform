# Generated by Django 2.2.5 on 2021-01-14 03:48

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=100, verbose_name='文件名称')),
                ('file_path', models.CharField(max_length=100, verbose_name='文件内容')),
                ('description', models.CharField(max_length=1000, verbose_name='文件描述')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('box_check', models.CharField(max_length=100, null=True, verbose_name='沙箱检测')),
            ],
            options={
                'db_table': 'file',
            },
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label_name', models.CharField(max_length=100, verbose_name='笔记类别表')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now_add=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name_plural': '笔记类别表',
                'db_table': 'classes',
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_name', models.CharField(max_length=1000, verbose_name='笔记名')),
                ('content', models.TextField(null=True, verbose_name='笔记内容')),
                ('note_premission', models.IntegerField(default=2, verbose_name='笔记权限')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('classify', models.IntegerField(default=1, verbose_name='笔记分类')),
            ],
            options={
                'db_table': 'note',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000, verbose_name='任务名称')),
                ('description', models.TextField(default='', verbose_name='任务描述')),
                ('particpant', models.CharField(max_length=200, verbose_name='任务参与人员')),
                ('end_time', models.CharField(max_length=20, null=True, verbose_name='任务结束时间')),
                ('start_time', models.CharField(max_length=20, verbose_name='任务开始时间')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('task_process', models.CharField(default='0-0-0-0-0-0-0', max_length=50, verbose_name='任务进度')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.UserInfo', verbose_name='用户')),
            ],
            options={
                'verbose_name_plural': '任务表',
                'db_table': 'task',
            },
        ),
        migrations.CreateModel(
            name='NoteLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.IntegerField(default=0, verbose_name='执行动作')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='taskmanage.Note', verbose_name='对应笔记')),
            ],
            options={
                'db_table': 'note_log',
            },
        ),
        migrations.CreateModel(
            name='NoteDir',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=1000, verbose_name='文件目录')),
                ('sub_dir', models.CharField(default='', max_length=500, null=True, verbose_name='文件子目录id')),
                ('pid', models.CharField(max_length=50, verbose_name='父目录id')),
                ('is_primary_dir', models.BooleanField(default=False, verbose_name='是否为根目录')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now_add=True, verbose_name='更新时间')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='taskmanage.Task', verbose_name='任务')),
            ],
            options={
                'verbose_name_plural': '文件目录表',
                'db_table': 'note_dir',
            },
        ),
        migrations.AddField(
            model_name='note',
            name='file_dir',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='taskmanage.NoteDir', verbose_name='归属目录'),
        ),
        migrations.AddField(
            model_name='note',
            name='label',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='taskmanage.Label', verbose_name='笔记标签'),
        ),
        migrations.AddField(
            model_name='note',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='taskmanage.Task', verbose_name='对应任务'),
        ),
        migrations.AddField(
            model_name='note',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.UserInfo', verbose_name='创建人'),
        ),
        migrations.CreateModel(
            name='FileLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.IntegerField(default=0, verbose_name='执行动作')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='taskmanage.File', verbose_name='对应文件')),
            ],
            options={
                'db_table': 'file_log',
            },
        ),
        migrations.CreateModel(
            name='FileDir',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dir_name', models.CharField(max_length=100, verbose_name='目录名称')),
                ('sub_dir', models.CharField(default='', max_length=500, null=True, verbose_name='子目录id')),
                ('pid', models.CharField(max_length=50, verbose_name='父目录id')),
                ('is_primary_dir', models.BooleanField(default=False, verbose_name='是否为根目录')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now_add=True, verbose_name='更新时间')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='taskmanage.Task', verbose_name='任务')),
            ],
            options={
                'verbose_name_plural': '文件目录表',
                'db_table': 'file_dir',
            },
        ),
        migrations.AddField(
            model_name='file',
            name='file_dir',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='taskmanage.FileDir', verbose_name='所属文件目录'),
        ),
        migrations.AddField(
            model_name='file',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='taskmanage.Task', verbose_name='对应任务'),
        ),
        migrations.AddField(
            model_name='file',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.UserInfo', verbose_name='创建用户'),
        ),
        migrations.CreateModel(
            name='BackNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='备份内容')),
                ('back_time', models.CharField(max_length=100, verbose_name='备份时间')),
                ('note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='taskmanage.Note', verbose_name='备份数据对应的笔记')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.UserInfo', verbose_name='修改用户')),
            ],
            options={
                'db_table': 'backupnote',
            },
        ),
    ]
